<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go Em Exemplos: File Paths</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'line-filters';
          }
          
          
          if (e.key == "ArrowRight") {
              window.location.href = 'directories';
          }
          
      }
  </script>
  <body>
    <div class="example" id="file-paths">
      <h2><a href="./">Go Em Exemplos</a>: File Paths</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>O pacote <code>filepath</code> fornece funções para parsear
e construir <em>file paths</em>, ou caminhos de arquivos,
de uma maneira flexível que pode ser utilizado
em vários sistemas operacionais; <code>dir/file</code> no
Linux vs. <code>dir\file</code> no Windows, por exemplo.</p>

          </td>
          <td class="code leading">
            <a target="_blank" href="https://go.dev/play/p/k3thwnDRPgF"><img title="Executar código em nova aba" src="play.png" class="run" /></a><img title="Copiar código" src="clipboard.png" class="copy" />
          <pre class="chroma">
<span class="kn">package</span> <span class="nx">main</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre class="chroma"><span class="kn">import</span> <span class="p">(</span>
    <span class="s">&#34;fmt&#34;</span>
    <span class="s">&#34;path/filepath&#34;</span>
    <span class="s">&#34;strings&#34;</span>
<span class="p">)</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre class="chroma"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Join</code> deve ser usado para construir caminhos
de forma flexível. Pode receber qualquer número
de argumentos e constrói um caminho com hierarquia
a partir deles.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">p</span> <span class="o">:=</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">&#34;dir1&#34;</span><span class="p">,</span> <span class="s">&#34;dir2&#34;</span><span class="p">,</span> <span class="s">&#34;filename&#34;</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;p:&#34;</span><span class="p">,</span> <span class="nx">p</span><span class="p">)</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Sempre deve ser utilizado o <code>Join</code> ao invés de
concatenar <code>/</code> ou <code>\</code> manualmente. Em adição
a a tornar flexível e utilizável em mais de um
sistema operacional, <code>Join</code> também irá normalizar
os caminhos, removendo separadores superfluos e
mudanças de diretório.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">filepath</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">&#34;dir1//&#34;</span><span class="p">,</span> <span class="s">&#34;filename&#34;</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">filepath</span><span class="p">.</span><span class="nf">Join</span><span class="p">(</span><span class="s">&#34;dir1/../dir1&#34;</span><span class="p">,</span> <span class="s">&#34;filename&#34;</span><span class="p">))</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Dir</code> e <code>Base</code> podem se rusados para dividir o caminho
para o diretório e para o arquivo. Alternativamente,
<code>Split</code> retornará ambos em uma mesma chamada.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Dir(p):&#34;</span><span class="p">,</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Dir</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="s">&#34;Base(p):&#34;</span><span class="p">,</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Base</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>É possível checar se um caminho é absoluto.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">filepath</span><span class="p">.</span><span class="nf">IsAbs</span><span class="p">(</span><span class="s">&#34;dir/file&#34;</span><span class="p">))</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">filepath</span><span class="p">.</span><span class="nf">IsAbs</span><span class="p">(</span><span class="s">&#34;/dir/file&#34;</span><span class="p">))</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre class="chroma">    <span class="nx">filename</span> <span class="o">:=</span> <span class="s">&#34;config.json&#34;</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Alguns nomes de arquivos tem extenção seguida
de um ponto. É possível separar a extensão do
resto do nome com <code>Ext</code>.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">ext</span> <span class="o">:=</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Ext</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">ext</span><span class="p">)</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Para encontrar nomes de arquivos com extensão
usa-se <code>strings.TrimSuffix</code>.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">strings</span><span class="p">.</span><span class="nf">TrimSuffix</span><span class="p">(</span><span class="nx">filename</span><span class="p">,</span> <span class="nx">ext</span><span class="p">))</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Rel</code> encontra o caminho relativo entre <em>base</em> e
<em>alvo</em>, ou <em>target</em>. Retorna erro se o alvo não
pode ser acessar a partir de base.</p>

          </td>
          <td class="code leading">
            
          <pre class="chroma">
    <span class="nx">rel</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Rel</span><span class="p">(</span><span class="s">&#34;a/b&#34;</span><span class="p">,</span> <span class="s">&#34;a/b/t/file&#34;</span><span class="p">)</span>
    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
        <span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">rel</span><span class="p">)</span>
</pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code">
            
          <pre class="chroma">    <span class="nx">rel</span><span class="p">,</span> <span class="nx">err</span> <span class="p">=</span> <span class="nx">filepath</span><span class="p">.</span><span class="nf">Rel</span><span class="p">(</span><span class="s">&#34;a/b&#34;</span><span class="p">,</span> <span class="s">&#34;a/c/t/file&#34;</span><span class="p">)</span>
    <span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
        <span class="nb">panic</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nf">Println</span><span class="p">(</span><span class="nx">rel</span><span class="p">)</span>
<span class="p">}</span>
</pre>
          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code">
            
          <pre class="chroma"><span class="gp">$</span> go run file-paths.go
<span class="go">p: dir1/dir2/filename
</span><span class="go">dir1/filename
</span><span class="go">dir1/filename
</span><span class="go">Dir(p): dir1/dir2
</span><span class="go">Base(p): filename
</span><span class="go">false
</span><span class="go">true
</span><span class="go">.json
</span><span class="go">config
</span><span class="go">t/file
</span><span class="go">../c/t/file</span></pre>
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Próximo exemplo: <a href="directories">Directories</a>.
      </p>
      

    <p class="footer">
      Por <a href="https://markmcgranaghan.com">Mark McGranaghan</a> e <a href="https://eli.thegreenplace.net">Eli Bendersky</a> | traduzido por <a href="https://github.com/lucassauro">Lucassauro</a> | <a href="https://github.com/lucassauro/gobyexample">contribua</a> | <a href="https://github.com/mmcgrana/gobyexample#license">licença</a>
    </p>

    </div>
    <script>
      var codeLines = [];
      codeLines.push('package main\u000A');codeLines.push('import (\u000A    \"fmt\"\u000A    \"path/filepath\"\u000A    \"strings\"\u000A)\u000A');codeLines.push('func main() {\u000A');codeLines.push('    p :\u003D filepath.Join(\"dir1\", \"dir2\", \"filename\")\u000A    fmt.Println(\"p:\", p)\u000A');codeLines.push('    fmt.Println(filepath.Join(\"dir1//\", \"filename\"))\u000A    fmt.Println(filepath.Join(\"dir1/../dir1\", \"filename\"))\u000A');codeLines.push('    fmt.Println(\"Dir(p):\", filepath.Dir(p))\u000A    fmt.Println(\"Base(p):\", filepath.Base(p))\u000A');codeLines.push('    fmt.Println(filepath.IsAbs(\"dir/file\"))\u000A    fmt.Println(filepath.IsAbs(\"/dir/file\"))\u000A');codeLines.push('    filename :\u003D \"config.json\"\u000A');codeLines.push('    ext :\u003D filepath.Ext(filename)\u000A    fmt.Println(ext)\u000A');codeLines.push('    fmt.Println(strings.TrimSuffix(filename, ext))\u000A');codeLines.push('    rel, err :\u003D filepath.Rel(\"a/b\", \"a/b/t/file\")\u000A    if err !\u003D nil {\u000A        panic(err)\u000A    }\u000A    fmt.Println(rel)\u000A');codeLines.push('    rel, err \u003D filepath.Rel(\"a/b\", \"a/c/t/file\")\u000A    if err !\u003D nil {\u000A        panic(err)\u000A    }\u000A    fmt.Println(rel)\u000A}\u000A');codeLines.push('');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
